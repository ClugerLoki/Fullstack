class RailwayReservationSystem {
    private waitlist: string[] = [];

    // Add a passenger to the waitlist (push onto stack)
    addPassenger(name: string): void {
        this.waitlist.push(name);
        console.log(`${name} added to the waitlist.`);
    }

    // Assign seat to the last added passenger (pop from stack)
    assignSeat(): void {
        if (this.waitlist.length === 0) {
            console.log("No passengers in the waitlist.");
        } else {
            const passenger = this.waitlist.pop();
            console.log(`Seat assigned to ${passenger}.`);
        }
    }

    // Display the current waitlist
    showWaitlist(): void {
        if (this.waitlist.length === 0) {
            console.log("Waitlist is currently empty.");
        } else {
            console.log("Current Waitlist (Top = Last Added):");
            for (let i = this.waitlist.length - 1; i >= 0; i--) {
                console.log(`${this.waitlist.length - i}. ${this.waitlist[i]}`);
            }
        }
    }
}

// Example Usage
const reservationSystem = new RailwayReservationSystem();

reservationSystem.addPassenger("Aman");
reservationSystem.addPassenger("Kumar");
reservationSystem.addPassenger("Sharma");

reservationSystem.showWaitlist();

reservationSystem.assignSeat(); // Charlie gets the seat
reservationSystem.assignSeat(); // Bob gets the seat

reservationSystem.showWaitlist();

